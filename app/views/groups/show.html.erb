<!-- app/views/groups/show.html.erb -->
<div class="container mx-auto mt-4 space-y-4 px-4">
  <h1 class="text-2xl md:text-4xl font-bold text-gray-800"><%= @group.name %></h1>

  <!-- Common Content for Both Views -->
  <%= render partial: 'summary', locals: { total_expenses: @total_expenses, per_person_share: @per_person_share, current_user_summary: @current_user_summary } %>
  <%= render 'shared/group_balance', current_user_owes: @current_user_owes, current_user_owed: @current_user_owed %>

  <!-- Desktop Content -->
  <div class="hidden md:block space-y-8">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <%= render partial: 'expenses', locals: { group: @group, expenses: @expenses } %>
      <div class="space-y-8">
        <%= render partial: 'members', locals: { group: @group } %>
        <%= render partial: 'expense_summary', locals: { user_summaries: @user_summaries } %>
      </div>
    </div>
    <%= render partial: 'settle_up', locals: { optimized_settlements: @optimized_settlements } %>
  </div>

  <!-- Mobile Content -->
  <div class="md:hidden space-y-4">
    <!-- Tab Navigation -->
    <div class="bg-white shadow-sm rounded-lg">
      <nav class="flex" aria-label="Tabs">
        <button onclick="showTab('expenses')" class="tab-button text-gray-600 py-3 px-1 border-b-2 font-medium text-sm flex-1 rounded-tl-lg" data-tab="expenses">
          Expenses
        </button>
        <button onclick="showTab('members')" class="tab-button text-gray-600 py-3 px-1 border-b-2 font-medium text-sm flex-1" data-tab="members">
          Members
        </button>
        <button onclick="showTab('settle')" class="tab-button text-gray-600 py-3 px-1 border-b-2 font-medium text-sm flex-1 rounded-tr-lg" data-tab="settle">
          Settle Up
        </button>
      </nav>
    </div>

    <!-- Tab Content -->
    <div id="expenses" class="tab-content active">
      <%= render partial: 'expenses', locals: { group: @group, expenses: @expenses } %>
    </div>

    <div id="members" class="tab-content hidden">
      <%= render partial: 'members', locals: { group: @group } %>
      <%= render partial: 'expense_summary', locals: { user_summaries: @user_summaries } %>
    </div>

    <div id="settle" class="tab-content hidden">
      <%= render partial: 'settle_up', locals: { optimized_settlements: @optimized_settlements } %>
    </div>
  </div>

  <!-- Floating Action Button for Adding Expense (visible on both mobile and desktop) -->
  <%= link_to new_group_expense_path(@group), style: "
  position: fixed;
  bottom: 1.5rem;
  right: 1.5rem;
  background-color: #FF6B6B;
  color: white;
  border-radius: 9999px;
  padding: 1rem;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  display: flex;
  align-items: center;
  justify-content: center;
  outline: none;
  z-index: 9999;
  transition: all 300ms ease-in-out;
", onmouseover: "this.style.backgroundColor='#E05555'; this.style.transform='scale(1.05)';", onmouseout: "this.style.backgroundColor='#FF6B6B'; this.style.transform='scale(1)';", onfocus: "this.style.boxShadow='0 0 0 2px #fff, 0 0 0 4px #FF6B6B'", onblur: "this.style.boxShadow='0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)'" do %>
    <svg xmlns="http://www.w3.org/2000/svg" style="width: 1.5rem; height: 1.5rem;" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
    </svg>
  <% end %>

  <script>
      function showTab(tabName) {
          document.querySelectorAll('.tab-content').forEach(content => {
              if (content.id === tabName) {
                  content.classList.add('active');
                  content.classList.remove('hidden');
                  setTimeout(() => {
                      content.style.height = 'auto';
                  }, 300); // Match this with the transition duration
              } else {
                  content.classList.remove('active');
                  setTimeout(() => {
                      content.classList.add('hidden');
                      content.style.height = '0';
                  }, 300); // Match this with the transition duration
              }
          });

          document.querySelectorAll('.tab-button').forEach(button => {
              if (button.dataset.tab === tabName) {
                  button.classList.add('text-indigo-600', 'border-indigo-600');
                  button.classList.remove('text-gray-600', 'border-transparent');
              } else {
                  button.classList.remove('text-indigo-600', 'border-indigo-600');
                  button.classList.add('text-gray-600', 'border-transparent');
              }
          });
      }
      showTab('expenses');
  </script>
</div>