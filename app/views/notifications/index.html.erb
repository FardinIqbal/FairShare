<!-- app/views/notifications/index.html.erb -->
<div class="notifications-container max-w-4xl mx-auto px-4 py-8">
  <h1 class="text-3xl font-bold mb-6 text-indigo-600">Notifications</h1>

  <div class="mb-6 flex justify-between items-center">
    <p class="text-gray-600"><%= pluralize(@notifications.unread.count, 'unread notification') %></p>
    <% if @notifications.unread.any? %>
      <%= button_to 'Mark all as read', mark_all_as_read_notifications_path, method: :post, class: 'bg-indigo-500 text-white px-4 py-2 rounded hover:bg-indigo-600 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105' %>
    <% end %>
  </div>

  <div class="space-y-4">
    <% if @notifications.any? %>
      <% @notifications.each do |notification| %>
        <div id="notification_<%= notification.id %>" class="notification-item bg-white p-6 rounded-lg shadow-md <%= notification.read? ? 'opacity-50' : '' %> transition duration-300 ease-in-out transform hover:-translate-y-1 hover:shadow-lg">
          <div class="flex items-start">
            <div class="flex-shrink-0">
              <%= render_notification_icon(notification) %>
            </div>
            <div class="ml-4 flex-grow">
              <p class="text-sm font-medium text-gray-900">
                <%= notification_message(notification) %>
              </p>
              <p class="mt-1 text-xs text-gray-500">
                <%= time_ago_in_words(notification.created_at) %> ago
              </p>
            </div>
            <% unless notification.read? %>
              <div class="ml-4 flex-shrink-0">
                <%= button_to 'Mark as read', mark_as_read_notification_path(notification), method: :patch, remote: true, class: 'text-sm text-indigo-500 hover:text-indigo-600 transition duration-300 ease-in-out' %>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    <% else %>
      <p class="text-gray-500 text-center py-8">No notifications yet.</p>
    <% end %>
  </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const markAsReadButtons = document.querySelectorAll('[data-method="patch"]');

        markAsReadButtons.forEach(button => {
            button.addEventListener('click', (event) => {
                event.preventDefault();
                const notificationId = event.target.closest('.notification-item').id.split('_')[1];

                fetch(event.target.action, {
                    method: 'PATCH',
                    headers: {
                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
                        'Accept': 'application/json'
                    },
                    credentials: 'same-origin'
                }).then(response => {
                    if (response.ok) {
                        const notificationElement = document.querySelector(`#notification_${notificationId}`);
                        notificationElement.classList.add('opacity-50');
                        event.target.remove();
                    }
                });
            });
        });
    });
</script>