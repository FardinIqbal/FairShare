<div class="bg-gradient-to-br from-gray-900 via-gray-800 to-black min-h-screen transition-colors duration-300">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <div class="text-center mb-12 opacity-0 transform translate-y-4 transition-all duration-1000 ease-out" data-animate>
      <h1 class="text-4xl sm:text-5xl font-extrabold text-indigo-400 mb-4 tracking-tight">
        Notifications
      </h1>
    </div>

    <div class="bg-gray-800 shadow-lg rounded-lg overflow-hidden mb-8 opacity-0 transform translate-y-4 transition-all duration-1000 ease-out" data-animate>
      <div class="px-6 py-8">
        <h2 class="text-2xl font-bold text-white mb-4">Notification Center</h2>
        <p class="text-sm text-gray-400 max-w-2xl">
          Stay updated on group activities, expenses, and payments. Manage your notifications here.
        </p>
      </div>
    </div>

    <div class="mb-6 flex flex-col sm:flex-row justify-between items-center space-y-4 sm:space-y-0">
      <p class="text-gray-400"><%= pluralize(@notifications.unread.count, 'unread notification') %></p>
      <% if @notifications.unread.any? %>
        <%= button_to 'Mark all as read', mark_all_as_read_notifications_path, method: :post, class: 'w-full sm:w-auto bg-gradient-to-r from-indigo-500 to-purple-500 text-white px-4 py-2 rounded-lg shadow-lg hover:from-indigo-600 hover:to-purple-600 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-900' %>
      <% end %>
    </div>

    <div class="space-y-6">
      <% if @notifications.any? %>
        <% @notifications.each do |notification| %>
          <div id="notification_<%= notification.id %>" class="notification-item bg-gray-800 p-6 rounded-lg shadow-md hover:shadow-xl transition duration-300 ease-in-out transform hover:-translate-y-1 opacity-0 translate-y-4 <%= notification.read? ? 'opacity-75' : '' %> border-l-4 <%= notification_color(notification) %>" data-animate>
            <div class="flex items-start">
              <div class="flex-shrink-0">
                <%= content_tag(:div, class: "w-10 h-10 rounded-full flex items-center justify-center #{notification_icon_color(notification)}") do %>
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path d="<%= notification_icon(notification) %>" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"></path>
                  </svg>
                <% end %>
              </div>
              <div class="ml-4 flex-grow">
                <p class="text-lg font-medium text-gray-100">
                  <%= notification_message(notification) %>
                </p>
                <p class="mt-1 text-xs text-gray-400">
                  <%= time_ago_in_words(notification.created_at) %> ago
                </p>
                <%= link_to notification_action_text(notification), notification_action_path(notification), class: 'mt-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-indigo-400 bg-indigo-700 hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 focus:ring-offset-gray-900 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:shadow-md' %>
              </div>
              <% unless notification.read? %>
                <div class="ml-4 flex-shrink-0">
                  <%= button_to 'Mark as read', mark_as_read_notification_path(notification), method: :patch, remote: true, class: 'text-sm text-indigo-400 bg-indigo-700 px-3 py-2 rounded-md hover:text-indigo-300 hover:bg-indigo-600 transition duration-300 ease-in-out transform hover:-translate-y-1 focus:outline-none focus:underline' %>
                </div>
              <% end %>
            </div>
          </div>
        <% end %>
      <% else %>
        <div class="bg-gray-800 p-6 rounded-lg shadow-md text-center opacity-0 transform translate-y-4 transition-all duration-1000 ease-out" data-animate>
          <svg class="mx-auto h-12 w-12 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"></path>
          </svg>
          <h3 class="mt-2 text-lg font-medium text-gray-100">No notifications</h3>
          <p class="mt-1 text-sm text-gray-400">You're all caught up! Check back later for new updates.</p>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const animatedElements = document.querySelectorAll('[data-animate]');

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('opacity-100', 'translate-y-0');
                    entry.target.classList.remove('opacity-0', 'translate-y-4');
                }
            });
        }, {
            threshold: 0.1
        });

        animatedElements.forEach(el => {
            observer.observe(el);
        });

        const markAsReadButtons = document.querySelectorAll('[data-method="patch"]');

        markAsReadButtons.forEach(button => {
            button.addEventListener('click', (event) => {
                event.preventDefault();
                const notificationId = event.target.closest('.notification-item').id.split('_')[1];

                fetch(event.target.action, {
                    method: 'PATCH',
                    headers: {
                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
                        'Accept': 'application/json'
                    },
                    credentials: 'same-origin'
                }).then(response => {
                    if (response.ok) {
                        const notificationElement = document.querySelector(`#notification_${notificationId}`);
                        notificationElement.classList.add('opacity-75');
                        event.target.remove();
                    }
                });
            });
        });
    });
</script>
