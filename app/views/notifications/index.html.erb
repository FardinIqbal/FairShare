<!-- app/views/notifications/index.html.erb -->
<div class="notifications-container max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  <h1 class="text-3xl font-bold mb-6 text-indigo-600">Notifications</h1>

  <div class="bg-white shadow overflow-hidden sm:rounded-lg mb-6">
    <div class="px-4 py-5 sm:p-6">
      <h2 class="text-lg leading-6 font-medium text-gray-900">Notification Center</h2>
      <p class="mt-1 max-w-2xl text-sm text-gray-500">
        Stay updated on group activities, expenses, and payments. Manage your notifications here.
      </p>
    </div>
  </div>

  <div class="mb-6 flex flex-col sm:flex-row justify-between items-center space-y-4 sm:space-y-0">
    <p class="text-gray-600"><%= pluralize(@notifications.unread.count, 'unread notification') %></p>
    <% if @notifications.unread.any? %>
      <%= button_to 'Mark all as read', mark_all_as_read_notifications_path, method: :post, class: 'w-full sm:w-auto bg-indigo-500 text-white px-4 py-2 rounded hover:bg-indigo-600 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2' %>
    <% end %>
  </div>

  <div class="space-y-4">
    <% if @notifications.any? %>
      <% @notifications.each do |notification| %>
        <div id="notification_<%= notification.id %>" class="notification-item bg-white p-6 rounded-lg shadow-md <%= notification.read? ? 'opacity-75' : '' %> transition duration-300 ease-in-out transform hover:-translate-y-1 hover:shadow-lg">
          <div class="flex items-start">
            <div class="flex-shrink-0">
              <%= render_notification_icon(notification) %>
            </div>
            <div class="ml-4 flex-grow">
              <p class="text-sm font-medium text-gray-900">
                <%= notification_message(notification) %>
              </p>
              <p class="mt-1 text-xs text-gray-500">
                <%= time_ago_in_words(notification.created_at) %> ago
              </p>
              <%= link_to notification_action_text(notification), notification_action_path(notification), class: 'mt-2 inline-flex items-center px-3 py-1 border border-transparent text-xs leading-4 font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500' %>
            </div>
            <% unless notification.read? %>
              <div class="ml-4 flex-shrink-0">
                <%= button_to 'Mark as read', mark_as_read_notification_path(notification), method: :patch, remote: true, class: 'text-sm text-indigo-500 hover:text-indigo-600 transition duration-300 ease-in-out focus:outline-none focus:underline' %>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    <% else %>
      <div class="bg-white p-6 rounded-lg shadow-md text-center">
        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"></path>
        </svg>
        <h3 class="mt-2 text-sm font-medium text-gray-900">No notifications</h3>
        <p class="mt-1 text-sm text-gray-500">You're all caught up! Check back later for new updates.</p>
      </div>
    <% end %>
  </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const markAsReadButtons = document.querySelectorAll('[data-method="patch"]');

        markAsReadButtons.forEach(button => {
            button.addEventListener('click', (event) => {
                event.preventDefault();
                const notificationId = event.target.closest('.notification-item').id.split('_')[1];

                fetch(event.target.action, {
                    method: 'PATCH',
                    headers: {
                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
                        'Accept': 'application/json'
                    },
                    credentials: 'same-origin'
                }).then(response => {
                    if (response.ok) {
                        const notificationElement = document.querySelector(`#notification_${notificationId}`);
                        notificationElement.classList.add('opacity-75');
                        event.target.remove();
                    }
                });
            });
        });
    });
</script>