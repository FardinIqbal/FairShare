<!-- app/views/expenses/index.html.erb -->
<div style="min-height: 100vh; display: flex; align-items: center; justify-content: center; background-color: #f3f4f6; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; padding: 20px;">
  <div style="max-width: 1200px; width: 100%; background-color: white; border-radius: 10px; box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1); overflow: hidden;">
    <div id="sticky-header" style="position: sticky; top: 0; background-color: white; z-index: 10; padding: 20px; border-bottom: 1px solid #e5e7eb; transition: all 0.3s ease-in-out;">
      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
        <%= link_to group_path(@group), class: "back-link", style: "color: #4f46e5; text-decoration: none; font-weight: 500; display: flex; align-items: center; transition: all 0.3s ease-in-out; font-size: 16px;" do %>
          <svg xmlns="http://www.w3.org/2000/svg" style="height: 20px; width: 20px; margin-right: 5px;" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
          </svg>
          Back to Group
        <% end %>
        <h1 style="font-size: 28px; font-weight: 700; color: #4f46e5;"><%= @group.name %></h1>
      </div>
      <div style="display: flex; justify-content: space-around; text-align: center;">
        <div>
          <p style="font-size: 14px; color: #6b7280;">Total Expenses</p>
          <p style="font-size: 20px; font-weight: 600; color: #4f46e5;"><%= number_to_currency(@total_expenses) %></p>
        </div>
        <div>
          <p style="font-size: 14px; color: #6b7280;">Your Balance</p>
          <p style="font-size: 20px; font-weight: 600; color: <%= @user_balance >= 0 ? '#10b981' : '#ef4444' %>;"><%= number_to_currency(@user_balance.abs) %></p>
        </div>
        <div>
          <p style="font-size: 14px; color: #6b7280;">Expense Count</p>
          <p style="font-size: 20px; font-weight: 600; color: #4f46e5;"><%= @expenses.count %></p>
        </div>
      </div>
    </div>

    <div style="padding: 20px;">
      <h2 style="font-size: 24px; font-weight: 600; margin-bottom: 20px; text-align: center; color: #4f46e5;">Expenses</h2>

      <!-- Search Bar -->
      <div style="position: relative; width: 100%; max-width: 500px; margin: 0 auto 20px auto;">
        <input type="text" id="expense-search" placeholder="Search expenses..." style="
        width: 100%;
          padding: 12px 40px 12px 16px;
          border: 1px solid #d1d5db;
          border-radius: 5px;
          font-size: 16px;
          transition: all 0.3s ease;
        " onfocus="this.style.borderColor='#4f46e5'; this.style.boxShadow='0 0 0 3px rgba(79, 70, 229, 0.2)';" onblur="this.style.borderColor='#d1d5db'; this.style.boxShadow='none';">
        <svg xmlns="http://www.w3.org/2000/svg" style="position: absolute; right: 12px; top: 50%; transform: translateY(-50%); width: 20px; height: 20px; color: #9ca3af; pointer-events: none;" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>
      </div>

      <div id="expenses-list" style="display: grid; gap: 20px;">
        <% @expenses.each do |expense| %>
          <div class="expense-item animate-fade-in-up" data-description="<%= expense.description.downcase %>" data-category="<%= expense.category.downcase %>" style="background-color: white; border-radius: 10px; box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1); overflow: hidden; transition: all 0.3s ease-in-out;">
            <%= link_to group_expense_path(@group, expense), style: "display: block; padding: 20px; text-decoration: none; color: inherit;" do %>
              <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">
                <h3 class="expense-description" style="font-size: 18px; font-weight: 600; color: #4f46e5; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 70%;"><%= expense.description %></h3>
                <span style="font-size: 18px; font-weight: 700; color: #1f2937;"><%= number_to_currency(expense.amount) %></span>
              </div>
              <div style="display: flex; justify-content: space-between; font-size: 14px; color: #6b7280;">
                <div style="display: flex; align-items: center;">
                  <svg xmlns="http://www.w3.org/2000/svg" style="height: 16px; width: 16px; margin-right: 5px;" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                  </svg>
                  <span class="expense-user-name" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 150px;"><%= expense.user.full_name %></span>
                </div>
                <div style="display: flex; align-items: center; margin-left: 10px;">
                  <svg xmlns="http://www.w3.org/2000/svg" style="height: 16px; width: 16px; margin-right: 5px;" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                  </svg>
                  <span><%= expense.date.strftime("%b %d, %Y") %></span>
                </div>
              </div>
              <div style="margin-top: 10px;">
                <span class="expense-category" style="background-color: #eef2ff; padding: 5px 10px; border-radius: 9999px; font-size: 14px; color: #4f46e5;"><%= expense.category %></span>
              </div>
            <% end %>
            <div style="padding: 10px 20px; background-color: #eef2ff; display: flex; justify-content: flex-end; gap: 10px;">
              <% if expense.user == current_user %>
                <%= link_to 'Edit', edit_group_expense_path(@group, expense), class: "expense-action-btn", style: "padding: 8px 16px; background-color: #4f46e5; color: white; border-radius: 5px; font-size: 14px; text-decoration: none; transition: all 0.3s ease-in-out;" %>
                <%= button_to 'Delete', group_expense_path(@group, expense), method: :delete, data: { confirm: 'Are you sure you want to delete this expense?' }, class: "expense-action-btn", style: "padding: 8px 16px; background-color: #ef4444; color: white; border-radius: 5px; font-size: 14px; border: none; cursor: pointer; transition: all 0.3s ease-in-out;" %>
              <% else %>
                <div style="display: flex; gap: 10px;">
                  <span title="Only the expense creator can edit" style="padding: 8px 16px; background-color: #d1d5db; color: #6b7280; border-radius: 5px; font-size: 14px; cursor: not-allowed;">Edit</span>
                  <span title="Only the expense creator can delete" style="padding: 8px 16px; background-color: #d1d5db; color: #6b7280; border-radius: 5px; font-size: 14px; cursor: not-allowed;">Delete</span>
                </div>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    </div>

    <!-- Floating Action Button -->
    <%= link_to new_group_expense_path(@group), id: "add-expense-btn", style: "position: fixed; bottom: 20px; right: 20px; background-color: #4f46e5; color: white; font-weight: 700; padding: 16px; border-radius: 9999px; box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); display: flex; align-items: center; justify-content: center; text-decoration: none; transition: all 0.3s ease-in-out; z-index: 50;" do %>
      <svg xmlns="http://www.w3.org/2000/svg" style="height: 24px; width: 24px;" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
      </svg>
      <span style="position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border-width: 0;">Add New Expense</span>
    <% end %>
  </div>
</div>

<style>
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-in-up {
        animation: fadeInUp 0.6s ease-out forwards;
        opacity: 0;
    }

    @media (max-width: 640px) {
        #sticky-header {
            padding: 10px;
        }

        #expense-search {
            font-size: 14px;
            padding: 8px 32px 8px 12px;
        }

        .expense-item h3 {
            font-size: 16px;
        }

        .expense-action-btn, [title^="Only the expense creator can"] {
            padding: 6px 12px;
            font-size: 12px;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const expenseItems = document.querySelectorAll('.expense-item');
        const addExpenseBtn = document.getElementById('add-expense-btn');
        const backLink = document.querySelector('.back-link');
        const stickyHeader = document.getElementById('sticky-header');
        const expenseSearch = document.getElementById('expense-search');

        // Animate expense items
        expenseItems.forEach((item, index) => {
            item.style.animationDelay = `${index * 0.1}s`;
        });

        // Add expense button hover effect
        addExpenseBtn.addEventListener('mouseover', function() {
            this.style.backgroundColor = '#4338ca';
            this.style.transform = 'scale(1.1)';
        });

        addExpenseBtn.addEventListener('mouseout', function() {
            this.style.backgroundColor = '#4f46e5';
            this.style.transform = 'scale(1)';
        });

        // Back link hover effect
        backLink.addEventListener('mouseover', function() {
            this.style.color = '#4338ca';
        });

        backLink.addEventListener('mouseout', function() {
            this.style.color = '#4f46e5';
        });

        // Sticky header scroll effect
        window.addEventListener('scroll', function() {
            if (window.scrollY > 10) {
                stickyHeader.style.boxShadow = '0 4px 6px -1px rgba(0, 0, 0, 0.1)';
            } else {
                stickyHeader.style.boxShadow = 'none';
            }
        });

        // Action button hover effects
        document.querySelectorAll('.expense-action-btn').forEach(btn => {
            btn.addEventListener('mouseover', function() {
                this.style.opacity = '0.9';
            });

            btn.addEventListener('mouseout', function() {
                this.style.opacity = '1';
            });
        });

        // Expense search functionality
        expenseSearch.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();

            expenseItems.forEach(item => {
                const descriptionElement = item.querySelector('.expense-description');
                const categoryElement = item.querySelector('.expense-category');
                const expenseDescription = descriptionElement.textContent.toLowerCase();
                const expenseCategory = categoryElement.textContent.toLowerCase();

                const matches = expenseDescription.includes(searchTerm) || expenseCategory.includes(searchTerm);

                if (matches) {
                    item.style.display = 'block';
                    highlightText(descriptionElement, searchTerm);
                    highlightText(categoryElement, searchTerm);
                } else {
                    item.style.display = 'none';
                }
            });
        });

        function highlightText(element, term) {
            const originalText = element.textContent;
            if (term.trim() === '') {
                element.innerHTML = originalText;
                return;
            }

            const regex = new RegExp(`(${term})`, 'gi');
            element.innerHTML = originalText.replace(regex, '<span style="background-color: #fde68a; color: #92400e;">$1</span>');
        }

        // Add a subtle hover effect to expense items
        expenseItems.forEach(item => {
            item.addEventListener('mouseover', function() {
                this.style.transform = 'translateY(-2px)';
                this.style.boxShadow = '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)';
            });

            item.addEventListener('mouseout', function() {
                this.style.transform = 'translateY(0)';
                this.style.boxShadow = '0 1px 3px 0 rgba(0, 0, 0, 0.1)';
            });
        });

        // Adjust layout for mobile
        function adjustForMobile() {
            if (window.innerWidth <= 640) {
                addExpenseBtn.style.bottom = '80px'; // Adjust for bottom navigation
                addExpenseBtn.style.right = '20px';
                addExpenseBtn.style.padding = '12px';
            } else {
                addExpenseBtn.style.bottom = '20px';
                addExpenseBtn.style.right = '20px';
                addExpenseBtn.style.padding = '16px';
            }
        }

        window.addEventListener('resize', adjustForMobile);
        adjustForMobile(); // Call once on load

        // Smooth scroll to top when clicking on sticky header
        stickyHeader.addEventListener('click', function() {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });
    });
</script>
